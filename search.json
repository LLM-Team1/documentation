[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "StratMystiqPro Documentation",
    "section": "",
    "text": "Preface\nThis is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#hinweise",
    "href": "index.html#hinweise",
    "title": "StratMystiqPro Documentation",
    "section": "Hinweise",
    "text": "Hinweise\n\nMögliche Gliederung (Design Science Research)",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#styling",
    "href": "index.html#styling",
    "title": "StratMystiqPro Documentation",
    "section": "Styling",
    "text": "Styling\n\nHTML Themes",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "Introduction and Project Overview",
    "section": "",
    "text": "In this module we got the task to identify a use case from a business model canvas to improve a business unit or different part of an existing company.\nTogether with Mr. Kirenz we decided to first define our use case to then create a business model from there on. Our use case was based on the idea of finding a way to make business analysis quick and easy for a wide range of potential customers. After that we constructed the business model around this use case. You can read more about the use case identification and modelling of our Business Model Canvas here. For a more visual understanding of our startups’ next goals we created a strategy map showing the directions our start up would go in the future.\nOur solution takes the findings of our use case identification and transform them into a software as a service (SaaS) solution. This solution provides an analysis tool for our customers to fulfill our value propositions.\nWe are using a Retrieval Augmented Generation (RAG) pipeline to load and retrieve the needed information (coming from business reports) from our vector store. We encountered different obstacles on our way, therefore we decided to customize the basic RAG pipline to deal with image/ table recognition and at the same time improve answer precision by using a multi query approach.\nWe used multiple evaluation methods to evaluate the performance of our customized RAG. The main goal was here to identify the overall performance of our custom RAG compared to the basic RAG. At the same time we evaluated the best chunk size for both RAGs. The best solution was our custom RAG, using the chunk size of 900.\nWe also developed a user friendly frontend to enable our customers to navigate between their business reports, analyses, and comparisons. Focus here was especially on the presentation of the extensive information in the SWOT analyses.\nFinally we created a comprehensive manual on how to deploy our application and how to use our application.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction and Project Overview</span>"
    ]
  },
  {
    "objectID": "usecase.html",
    "href": "usecase.html",
    "title": "Usecase",
    "section": "",
    "text": "We want to create a SaaS solution that is aimed at business strategy analysts of a company (see personas) to support them in tasks such as competitor analysis.\nIn our tool, the user should be able to:\n\nupload their own annual report, use an existing one or a public one to gain insights into the respective company\ncreate a SWOT analysis for the selected report\nask individual questions about the report via a chatbot",
    "crumbs": [
      "Business Relevance",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Usecase</span>"
    ]
  },
  {
    "objectID": "userPersona.html",
    "href": "userPersona.html",
    "title": "User Persona",
    "section": "",
    "text": "Demographic Data:\nName: Alex Schmidt\nAge: 35 years\nGender: Male\nPlace of residence: Stuttgart, Germany\nFamily status: Married without kids\nInterests: Cars, technology, business news, hiking, AI\nOccupation: Strategy analyst in the department for market and competition analysis at Mercedes Benz",
    "crumbs": [
      "Business Relevance",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>User Persona</span>"
    ]
  },
  {
    "objectID": "userPersona.html#tasks-responsibilities",
    "href": "userPersona.html#tasks-responsibilities",
    "title": "User Persona",
    "section": "Tasks & Responsibilities:",
    "text": "Tasks & Responsibilities:\n\nCollect and analyze market data to identify trends and developments in the automotive industry\nAnalyze competitor data to identify strengths, weaknesses, opportunities and threats\nCreate comprehensive reports and presentations for executives to enable informed strategic decisions\nCollaborate with other departments to gather data and gain insights into various aspects of the market & the firm\nDevelop long-term strategic plans to strengthen the competitive position of Mercedes-Benz",
    "crumbs": [
      "Business Relevance",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>User Persona</span>"
    ]
  },
  {
    "objectID": "userPersona.html#pains-problems",
    "href": "userPersona.html#pains-problems",
    "title": "User Persona",
    "section": "Pains & Problems:",
    "text": "Pains & Problems:\n\nTime-consuming data collection: Manual collection of market data & competitive information takes up a significant amount of working time\nRisk of information overload: The amount of data available carries the risk that Alex could overlook important trends and patterns\nDelays in reaction time: The time-consuming manual analysis leads to delays in reacting to current market developments and competitive changes\nLimited resources for in-depth analysis: Due to the time required, Alex cannot always perform the in-depth analysis required for comprehensive strategic planning\nLack of precision in data interpretation: Manual processing of data carries the risk of misinterpretation or human error, which could affect the accuracy and reliability of his analyses",
    "crumbs": [
      "Business Relevance",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>User Persona</span>"
    ]
  },
  {
    "objectID": "bmc.html",
    "href": "bmc.html",
    "title": "Business Model Canvas and Use Case Identification",
    "section": "",
    "text": "Value Proposition\nIt is our main goal to provide easy and fast access to branch insights. Being more precise, we aim to give our customers a wide overview of the market and their (direct) competitors. To achieve this goal we offer different features in our application, including the SWOT Analysis, the BCG Matrix, a Business Model Canvas and a short profile of the relevant competitor. Our customers choose which competitors they would like to analyze. They simply select or upload the annual report of a relevant competitor and start analyzing by using our features such as the SWOT Analysis. The tool consists of many different features to analyze the annual reports. We are planning to first publish the company profile/ summary, SWOT analysis, Business Model Canvas, and BCG Matrix, to then extend these features in the future to give our customers even more options to analyze the annual reports.\nOur customers choose which competitors they would like to analyze. They simply select or upload the annual report of a relevant competitor and start analyzing by using our features such as the SWOT Analysis.\nThe tool consists of many different features to analyze the annual reports. We are planning to first publish the company profile/ summary, SWOT analysis, Business Model Canvas, and BCG Matrix, to then extend these features in the future to give our customers even more options to analyze the annual reports.",
    "crumbs": [
      "Business Relevance",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Business Model Canvas and Use Case Identification</span>"
    ]
  },
  {
    "objectID": "bmc.html#customer-segments",
    "href": "bmc.html#customer-segments",
    "title": "Business Model Canvas and Use Case Identification",
    "section": "Customer Segments",
    "text": "Customer Segments\nAs our customer Segments we decided to be focusing on companies in the automotive industry. This industry is currently extremely fast moving and the competition between those companies is on an all time high. One of the biggest reasons is the development of environmentally friendly vehicles and the rising competition by brands on the Asian market. This makes it very important for the affected companies to keep an eye on their competition and arising trends -making them the perfect customers for our analysis tool.\nMore in detail, we identified strategic-competitor analysts in the automotive industry as our end users.\nIn the future we could extend our customer base to a variety of interesting customer segments. These customers could be firms in the field of investors, finance analysts or business consulting.",
    "crumbs": [
      "Business Relevance",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Business Model Canvas and Use Case Identification</span>"
    ]
  },
  {
    "objectID": "bmc.html#customer-relationship",
    "href": "bmc.html#customer-relationship",
    "title": "Business Model Canvas and Use Case Identification",
    "section": "Customer Relationship",
    "text": "Customer Relationship\nTo build our first customer base we will step in personal contact with just a few companies in the automotive field. At the same time we are keeping this close relationship with our customers to fully understand them and their needs to optimize our products to serve them as efficiently as possible. We will also offer consulting to this customer segment to adjust or extend the features of the tool to their specific needs. Later we will make our product available to a wider range of customers and offer off the shelf software including a few basic analysis methods. This off the shelf software is the product we want to sell to a wider range of customers. To stay in touch we will set up an email newsletter to keep them posted on new feature releases and changes of our tool. This customer segment can then use our self-service to unlock these new features.",
    "crumbs": [
      "Business Relevance",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Business Model Canvas and Use Case Identification</span>"
    ]
  },
  {
    "objectID": "bmc.html#channels",
    "href": "bmc.html#channels",
    "title": "Business Model Canvas and Use Case Identification",
    "section": "Channels",
    "text": "Channels\nDepending on the product we would either choose online marketing or direct sales. In case of the “off the shelf” software with no additional features we target the broader mass; meaning we are trying to reach as many customers with the same product. For our customer specific products, tailored to a more specific need on the customer side, we approach companies in a more direct sales kind of style. We expect to make more money per sale on the customer specific software, since we price the specifications and consulting services. That allows us to use this more expensive way of customer channel.",
    "crumbs": [
      "Business Relevance",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Business Model Canvas and Use Case Identification</span>"
    ]
  },
  {
    "objectID": "bmc.html#key-partners",
    "href": "bmc.html#key-partners",
    "title": "Business Model Canvas and Use Case Identification",
    "section": "Key partners",
    "text": "Key partners\nAs our key partners we identified providers of corporate and financial data. In the beginning we will simply use the public annual reports of well known companies and let our customers upload their own data to our application. In the future we want to extend this function to also offer exclusive corporate and financial data on our application. This data will be brought in by the mentioned provider firms.\nAnother important partner is a marketing agency with experience in this field. With this partner we can get automotive companies to know us and our services.\nFacing the challenge of the groundedness and quality of the data provided by us we need auditing firms to ensure high quality of the data provided by our application.",
    "crumbs": [
      "Business Relevance",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Business Model Canvas and Use Case Identification</span>"
    ]
  },
  {
    "objectID": "bmc.html#key-activities",
    "href": "bmc.html#key-activities",
    "title": "Business Model Canvas and Use Case Identification",
    "section": "Key activities",
    "text": "Key activities\nOne of our most important activities is software development. Especially in the beginning it is key to improve and extend the features of our product. Starting with our main feature, the SWOT matrix, we need to introduce more features and more ways to analyze the competition and market. Also the maintenance and updating of the database is a key activity. Another important activity is customer support. We want to help our customers with their problems -making it easy to reach out to us, which makes it easier for us to understand our customer needs, improve the product, and finally make our customers happy.",
    "crumbs": [
      "Business Relevance",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Business Model Canvas and Use Case Identification</span>"
    ]
  },
  {
    "objectID": "bmc.html#key-resources",
    "href": "bmc.html#key-resources",
    "title": "Business Model Canvas and Use Case Identification",
    "section": "Key resources",
    "text": "Key resources\nThe most important Resource in our startup is the software developers. They ensure the quality and functionality of our product. Additional to that we need the hardware for our employees.",
    "crumbs": [
      "Business Relevance",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Business Model Canvas and Use Case Identification</span>"
    ]
  },
  {
    "objectID": "bmc.html#cost-structure",
    "href": "bmc.html#cost-structure",
    "title": "Business Model Canvas and Use Case Identification",
    "section": "Cost structure",
    "text": "Cost structure\nOur Cost structure mainly consists of fixed cost for employee salaries for product development, maintenance, and consulting services. We also need to pay licenses for the commercial use of (development) software as fixed costs. At the same time we need to attract new customers, resulting in marketing expenses. For variable costs we pay for every API calls to OpenAI, made by our customers.",
    "crumbs": [
      "Business Relevance",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Business Model Canvas and Use Case Identification</span>"
    ]
  },
  {
    "objectID": "bmc.html#revenue-streams",
    "href": "bmc.html#revenue-streams",
    "title": "Business Model Canvas and Use Case Identification",
    "section": "Revenue streams",
    "text": "Revenue streams\nFor our SaaS business model, our revenue stream is structured around several key components. Firstly, we offer licensing of our software tool, allowing customers to gain access to our platform and its basic functionalities. Secondly, we provide subscription-based access to our SaaS solution, offering different tiers or plans that unlock additional features and capabilities based on the customer’s needs and usage requirements. This subscription model ensures recurring revenue as customers continue to utilize our platform over time.\nIn addition to subscriptions, we offer maintenance and support services to ensure that our customers receive ongoing assistance, updates, and troubleshooting to keep their software running smoothly. This component not only enhances customer satisfaction but also provides an additional revenue stream through service contracts or subscription add-ons.\nMoreover, we differentiate ourselves by offering consulting services to tailor our software to the specific needs and requirements of our customers. Our team of experts works closely with clients to understand their business processes, customize the software accordingly, and provide training and guidance for optimal utilization. These consulting services serve as a valuable revenue stream, allowing us to provide personalized solutions while generating additional income beyond the software subscription fees.\nOverall, our revenue stream encompasses a combination of software licensing, subscription-based access, maintenance and support services, and consulting offerings, providing a comprehensive and sustainable approach to monetizing our SaaS business model.",
    "crumbs": [
      "Business Relevance",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Business Model Canvas and Use Case Identification</span>"
    ]
  },
  {
    "objectID": "strategyMap.html",
    "href": "strategyMap.html",
    "title": "Strategy Map",
    "section": "",
    "text": "Financial\n\n\n\n\n\nMonthly revenue\n\n\nYearly revenue\n\n\n\n\nCompany growth\n\n\n\n\n\n\nGoss profit margin\n\n\nNet margin\n\n\n\n\nProfitaility\n\n\n\n\n\n\n\nCustomer\n\n\n\n\n\nCustomer aquistion cost\n\n\nCustomer retention rate\n\n\n\n\nCustomer acquisition and customer loyalty\n\n\n\n\n\n\nUser rating\n\n\nSupport response time\n\n\n\n\nOptimized user experience\n\n\n\n\n\n\n\nInternal process\n\n\n\n\n\nFrequency of featrue releases\n\n\nMeasurement of product quality\n\n\nSpeed of data import\n\n\nQuality of the output data\n\n\n\n\nFurther development and maintenance of the software\n\n\nImproving data quality and analysis options\n\n\n\n\nPersonalized service\n\n\nOff the shelf software\n\n\n\n\nIntroducing new products\n\n\n\n\n\n\n\nLearning and growth\n\n\n\n\n\nTraining sessions\n\n\nTeam satisfaction\n\n\n\n\nFurther development of the team\n\n\n\n\n\n\nNumber of new releases\n\n\nNumber of new ideas implemented\n\n\n\n\nPromoting openness to innovation in the company",
    "crumbs": [
      "Business Relevance",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Strategy Map</span>"
    ]
  },
  {
    "objectID": "valueProposition.html",
    "href": "valueProposition.html",
    "title": "Value Proposition",
    "section": "",
    "text": "Customer Segment",
    "crumbs": [
      "Business Relevance",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Value Proposition</span>"
    ]
  },
  {
    "objectID": "valueProposition.html#customer-segment",
    "href": "valueProposition.html#customer-segment",
    "title": "Value Proposition",
    "section": "",
    "text": "Gains\n\nWell-developed strategy\nGood understanding of your own company and competitors\n\n\n\nPains\n\nTime-consuming work through annual reports\nDoes not know all the data from the own company and competitor companies\nRequires significant working time to prepare the analysis\n\n\n\nCustomer Jobs\n\nCreate analysis\nCreate evaluations\nDerive and develop strategies based on the analyses and evaluations",
    "crumbs": [
      "Business Relevance",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Value Proposition</span>"
    ]
  },
  {
    "objectID": "valueProposition.html#product-segment",
    "href": "valueProposition.html#product-segment",
    "title": "Value Proposition",
    "section": "Product Segment",
    "text": "Product Segment\n\nGain Creators\n\nA mature strategy based on data and benchmarks\nBetter understanding and classification of the company\nSaves time\nRegular and simple strategy adjustments\n\n\n\nPain relievers\n\nIndividual needs can be taken into account\nStrategy and analyses can be created simultaneously\n\n\n\nProduct and services\n\nAnalysis of your own data and the competitions\nPreparation of evaluations and analysis (e.g. SWOT)\nDevelopment of strategic approaches",
    "crumbs": [
      "Business Relevance",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Value Proposition</span>"
    ]
  },
  {
    "objectID": "RAGpipeline.html",
    "href": "RAGpipeline.html",
    "title": "RAG Pipeline",
    "section": "",
    "text": "Demographic Data:",
    "crumbs": [
      "System Design",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>RAG Pipeline</span>"
    ]
  },
  {
    "objectID": "RAGevaluation.html",
    "href": "RAGevaluation.html",
    "title": "RAG Evaluation",
    "section": "",
    "text": "Fundamental Goals of Evaluation\n\n\nMethods for RAG-Evaluation\nThere are different options when it comes to evaluating a RAG-System. After looking into the literature we found different out that there is not the one perfect method to evaluate a RAG-System.\nIn Information Retrieval (IR) Venable et al. (2016) looks at the whole development process of an IR System. In the following Figure XX we see different approaches for different products. Our product falls in the “Human Risk & Effectiveness” path. This path is made for solutions that are human centered just as our system. The black triangles are symbolizing different possible evaluation steps. On the y axis we find a scale coming from artificial, going to more naturalistic. Artificial stands for a more automated evaluation process. On the other hand we find a scale from formative to summative on the x axis. Formative means that with this evaluation we try to improve the output; while summative evaluations should give an more generall overview over the final product and whether it is providing all the functionalities it should provide as a solution a customer could use.\nSince our product is still in the prototype phase we concentrated our evaluation on the first three triangles. Meaning we did an automated evaluation using libraries like TruLens and RAGAS. The biggest advantage coming with these techniques is that they are comparably cheap (Venable et al., 2016). Next we used human evaluation to prove the results of our automated evaluation approach with this human centered approach. Human centered approaches for evaluation bring the advantage to give a more realistic view on the system. Problem with these approaches is that they are comparably expensive and time consuming (Venable et al., 2016)\n\n\nGeneral Evaluation Foundation\nWe used our evaluation methods always on both, the basic RAG and our customized RAG. To do so we handed over the following eight questions. On the one hand question 1,2,3,5 are more “simple” questions, aiming to find a simple answer. Question 4,6,7,8 on the other hand are more “complex” questions, aiming to find a solution, where multiple contexts are needed from the business report.\nPrompts to RAG in evaluation process:\n\nWhat product categories and car models does Mercedes-Benz offer?\nWhat was the total revenue of Mercedes-Benz in the last fiscal year?\nWhich new markets did Mercedes-Benz enter in the past year?\nWhat specific sustainability goals has Mercedes-Benz set for the upcoming year?\nHow much did Mercedes-Benz invest in research and development in the last fiscal year?\nWhat are the key challenges Mercedes-Benz has faced in its supply chain and production processes, and how have these impacted its operational efficiency?\nHow is Mercedes-Benz adapting its overall business strategy to align with current global automotive trends, such as digitalization, sustainability, and changing consumer preferences?\nWhat opportunities does Mercedes-Benz have in the realm of electric vehicles and autonomous driving technologies, and what strategic initiatives are they undertaking in these areas?\n\n\n\nAutomated Evaluation Approach\nAs already mentioned we used different libraries to evaluate our RAG-System.\nFinally we ended up using the RAGAS framework since this made it easy to extract the evaluation results in an excel file to later compare it with our human centered evaluation approach. Following you we see the results of our evaluation using the RAGAS framework.\n\n\nHuman Centered Evaluation Approach\n\nThree evaluators\nEvaluating the RAG-results based on the three criteria: “Relevance and Accuracy”, “Clarity and Coherence”, and “Completeness and Depth”\nPresentation of results…",
    "crumbs": [
      "System Design",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>RAG Evaluation</span>"
    ]
  },
  {
    "objectID": "backendArchitecture.html",
    "href": "backendArchitecture.html",
    "title": "Backend Architecture",
    "section": "",
    "text": "Backend Requirements\nAt the beginning of the project, we were trying to decide what technologies and architectures we should use to build our system. To make these decisions, we decided to to define the requirements that the system should meet from a technical standpoint. Seeing that the goal of this project is to build a prototype for a SaaS tool, the backend should be designed to meet a number of requirements. These have been grouped into the following categories:",
    "crumbs": [
      "System Design",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Backend Architecture</span>"
    ]
  },
  {
    "objectID": "backendArchitecture.html#backend-requirements",
    "href": "backendArchitecture.html#backend-requirements",
    "title": "Backend Architecture",
    "section": "",
    "text": "Scalable\nThe system should be designed to handle multiple number of users and tasks at any time without impacting performance.\n\nHandle multiple different Users at any time:\n\nProcess a variety of reports simultaneously.\nProvide answers to user queries efficiently.\n\nAllow easy horizontal or vertical scalability:\n\nThe system should be capable of scaling out (adding more nodes to the system) and scaling up (adding more power to existing nodes) as necessary, without any service interruption.\n\n\n\n\nResource Efficient\nOptimizing the use of resources is crucial for maintaining a cost-effective and high-performing system.\n\nMinimize API-Calls to OpenAI and other external services:\n\nReduce the frequency and volume of API requests to avoid unnecessary costs and to maintain system responsiveness.\n\nOnly regenerate responses if requested by a User:\n\nCache and reuse responses where possible to avoid redundant computations.\n\n\n\n\nAdaptable\nThe system should be flexible to accommodate changes and the addition of new features.\n\nAllow Users to upload reports from several business sectors:\n\nSupport a diverse range of report formats and contents to cater to different industry needs.\n\nIt should be easy to add features to the tool without major code changes:\n\nDesign the architecture to be modular, allowing new features to be added with minimal changes to the core codebase.\n\n\n\n\nSecure\nSecurity is a top priority to protect user data and ensure trust in the system.\n\nUser Log-In should be secure and follow industry standards:\n\nImplement authentication mechanisms that meet current security best practices.\n\nEnsure User Data is separated and protected from unauthorized access:\n\nApply strict access controls and data isolation to ensure that user data is not exposed to unauthorized entities.",
    "crumbs": [
      "System Design",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Backend Architecture</span>"
    ]
  },
  {
    "objectID": "backendArchitecture.html#tech-stack",
    "href": "backendArchitecture.html#tech-stack",
    "title": "Backend Architecture",
    "section": "Tech Stack",
    "text": "Tech Stack\nBased on the requirements defined above, we decided to use the following technologies to build the backend of the system. The following sections will provide a brief overview of each technology and the reasons for choosing them.\n\nPython\nThe backend of the system is built using Python, some of the reasons for choosing Python are:\n\nEase of Use:\n\nAll team members have experience working with Python, making it easy for all team members to actively contribute to the project.\n\nNumerous Opensource Libraries:\n\nPython has a rich ecosystem of libraries and tools ranging from backend frameworks to machine learning libraries such as Flask and Langchain.\n\n\n\n\nFastAPI\nFastAPI is a modern, fast (high-performance), web framework for building APIs with Python. The reasons for choosing FastAPI are:\n\nPerformance and Asynchronous Request Handling:\n\nFastAPI is built on top of Starlette for web routing and Pydantic for data validation, this makes it more performant than other Python web frameworks such as Flask.\nIt supports asynchronous request handling natively, which is crucial for handling multiple requests simultaneously where long-running tasks are expected.\n\nAutomatic API Documentation:\n\nFastAPI automatically generates API documentation based on the code, which makes it easier to maintain and update the documentation.\nIt provides a built-in interactive API documentation (Swagger UI) which makes it easier to test and debug the API. Without the need for additional tools such as Postman.\n\n\n\n\nDocker\nDocker is a platform for developing, shipping, and running applications. The reasons for choosing Docker are:\n\nConsistent Development Environment:\n\nDocker allows us to create a consistent environment for development as it greatly reduces the number of possible errors when working with different platforms (Mac and Windows).\nDatabases and other services can be run as containers, which makes it easier to set up and tear down the development environment quickly.\n\nEasy Deployment:\n\nDocker containers can be deployed to any platform that supports Docker, which makes it easier to deploy the system to different cloud providers.\nServices can be scaled horizontally by running multiple containers of the same service.\n\n\n\n\nMySQL\nTo store user, report and analysis data, we decided to use a relational database. The reasons for choosing MySQL are:\n\nExperience:\n\nAll team members have experience working with MySQL, making it easier for all team members to actively contribute to the project.\n\nScalability:\n\nShould the need arise, MySQL can be scaled horizontally by using sharding or clustering to handle a large number of users and reports.\n\n\n\n\nChromaDB\nChromaDB is an open-source vector store that is designed to store and retrieve vector embeddings. The reasons for choosing ChromaDB are:\n\nNatively Supported by Langchain:\n\nChromaDB is natively supported by Langchain modules and thus requires minimal configuration to build initial prototypes.\n\nDocumentation and Community:\n\nChromaDB has a rich documentation and an active community which makes it easier to get help and support when needed.",
    "crumbs": [
      "System Design",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Backend Architecture</span>"
    ]
  },
  {
    "objectID": "backendArchitecture.html#data-model",
    "href": "backendArchitecture.html#data-model",
    "title": "Backend Architecture",
    "section": "Data Model",
    "text": "Data Model\nThe data model of the application is designed to store user data, report data, and analysis data. The following sections will provide a brief overview of the data model and the relationships between the different entities. The data model is designed to be flexible and adaptable to accommodate changes and the addition of new features.\n\nOverview Diagram\nThe following diagram provides an overview of the data model and the relationships between the different entities. As well as the relationship between the relational database and vector store.\n\n\n\nData Model of StratMystiqPro\n\n\n\n\nUser\nThe User entity represents a user of the system. It is created when a user logs in to the system for the first time. The User entity has the following attributes:\n\nuser_id: (PK:UUID) A unique identifier for the user.\nusername: (String) The username of the user.\nemail: (String) The email address of the user.\nrole: (String) The role of the user, which can be either “admin” or “user”.\ncreated_at: (DateTime) The date and time when the user was created.\nupdated_at: (DateTime) The date and time when the user was last updated.\n\n\n\nReport\nThe Report entity is the central entity of the system. It represents a report that a user uploads to the system. A Report by default is private and can only be accessed by the user who uploaded it. The User does have the option to make the report public. The Report entity has the following attributes:\n\nreport_id: (PK:UUID) A unique identifier for the report.\ntitle: (String) The title of the report.\nfilename: (String) The filename of the report.\nyear: (Integer) The year the report was published.\ncompany_id: (FK:UUID) The company identifier of the report. Foreign key to the Company entity.\nreport_public: (Boolean) A flag to indicate if the report is public or private.\ncreated_at: (DateTime) The date and time when the report was created.\nupdated_at: (DateTime) The date and time when the report was last updated.\ndeleted_at: (DateTime) The date and time when the report was deleted.\n\n\n\nCompany\nThe Company entity represents the company that the report is associated with. The Company entity has the following attributes:\n\ncompany_id: (PK:UUID) A unique identifier for the company.\nname: (String) The name of the company.\nindustry: (String) The industry of the company.\ncreated_at: (DateTime) The date and time when the company was created.\nupdated_at: (DateTime) The date and time when the company was last updated.\n\n\n\nAnalysis\nThe Analysis entity is the object that contains the results of the main feature of the system. It represents the analysis of a report that a user requests. Note that the Analysis entity is specifically not called SWOT Analysis, as the system is designed to be flexible and adaptable to accommodate new types of analysis in the future. The Analysis entity has the following attributes:\n\nanalysis_id: (PK:UUID) A unique identifier for the analysis.\nreport_id: (FK:UUID) Reference to the report that the analysis is associated with.\ncompare_report_id: (FK:UUID) If the analysis is a comparison analysis, this field will reference the report that was used for comparison.\ntype: (String) The type of analysis, currently supported are “swot” or “swot_comparison”.\ncontent: (Text) The content of the analysis, which is a JSON string that contains the results of the analysis.\ncreated_at: (DateTime) The date and time when the analysis was created.\nupdated_at: (DateTime) The date and time when the analysis was last updated.\n\n\n\nAnalysis Section\nThe Analysis Section entity represents a section of the analysis. It was introduced towards the end of the project to store intermediate results of the analysis. In case an analysis process is interrupted, the system can use the intermediate results to continue the analysis where it stopped. The Analysis Section entity has the following attributes:\n\npartial_result_id: (PK:UUID) A unique identifier for the partial result.\nanalysis_id: (FK:UUID) Reference to the analysis that the partial result is associated with.\nsection: (String) The section of the analysis, which can be “strengths”, “weaknesses”, “opportunities” or “threats”.\ncontent: (Text) The content of the partial result, which is a JSON string that contains the intermediate results of the analysis.\ncreated_at: (DateTime) The date and time when the partial result was created.\nupdated_at: (DateTime) The date and time when the partial result was last updated.\n\n\n\nScreenshot\nThe Screenshot entity is used to track and identify the screenshots that are taken of the reports. The Screenshots are either the identified tables or the cover page of the report. It is implemented in a way that allows all other types of screenshots to be added in the future. The Screenshot entity has the following attributes:\n\nscreenshot_id: (PK:UUID) A unique identifier for the screenshot.\nreport_id: (FK:UUID) Reference to the report that the screenshot is associated with.\nfilename: (String) The filename of the screenshot.\ntype: (String) The type of the screenshot, which can be “table” or “image”.\ndescription: (Text) A JSON string that contains the information extracted from the screenshot.\ncreated_at: (DateTime) The date and time when the screenshot was created.\nupdated_at: (DateTime) The date and time when the screenshot was last updated.\n\n\n\nJob\nThe Job entity was originally introduced to track the status of the report ingestion. While developing the system, we realized that we need to track the status of many long-running task in the system. It also acts a Job-List for the Backend to process outstanding jobs. The Job entity has the following attributes:\n\njob_id: (PK:UUID) A unique identifier for the job.\nobject_id: (UUID) Reference to the object that the job is associated with. Currently supported are report_id, analysis_id or screenshot_id.\nobject_type: (String) The type of the object that the job is associated with. Currently supported are “report”, “analysis” or “screenshot”.\nuser_id: (FK:UUID) Reference to the user that the job is associated with.\nstatus: (String) The status of the job, which can be “pending”, “in_progress”, “completed” or “failed”.\npercentage: (Integer) The percentage of the job that has been completed. (Only supported in report_ingestion)\nrequest_date: (DateTime) The date and time when the job was requested.\ncompletion_date: (DateTime) The date and time when the job was completed.\ncreated_at: (DateTime) The date and time when the job was created.\nupdated_at: (DateTime) The date and time when the job was last updated.\n\n\n\nVector Store\nIn the report ingestion process, the system extracts the text from the report, splits it into chunks and stores it in the vector store. The vector store is used to store the vector embeddings of the text, the text that was embedded, as well as metadata to identify the individual chunks. The Vector Store knows the following two entities:\n\nCollection\nThe Collection entity represents a group of vector embeddings. We currently only use one collection to store the embeddings of all reports. For future use cases, we planned on adding more collections to store embeddings of different types of data (Websites…) The Collection entity has the following attributes:\n\ncollection_id: (PK:UUID) A unique identifier for the collection.\nname: (String) The name of the collection.\ncreated_at: (DateTime) The date and time when the collection was created.\n\n\n\nChunk\nThe Chunk entity represents a single chunk of text that was embedded and stored in the vector store. The Chunk entity has the following attributes:\n\nchunk_id: (PK:UUID) A unique identifier for the chunk.\nvectors: (Array) An array of floats that represents the vector embeddings of the text.\ntext: (Text) The text that was embedded.\nmetadata: (JSON) A JSON string that contains metadata to identify the chunk.\n\nreport_id: (UUID) The report the chunk is associated with. Links to the Report entity in the relational database.\nchunk_type: (String) The type of the chunk, which can be “table” or “report_text”.\nextra_content: (JSON) Only used for “table” chunks. Contains the extracted table data.\npage_number: (Integer) The page number of the report where the chunk was extracted from.",
    "crumbs": [
      "System Design",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Backend Architecture</span>"
    ]
  },
  {
    "objectID": "backendArchitecture.html#python-classes",
    "href": "backendArchitecture.html#python-classes",
    "title": "Backend Architecture",
    "section": "Python Classes",
    "text": "Python Classes\nThe following section will focus on the Python classes that were implemented to handle the business logic of the system. It should be noted that this structure was not implemented from the beginning of the project, but has evolved over time as the system grew in complexity. Specifically, the classes that represent the entities of the system such as User, Report, Analysis, etc. don’t contain any business logic and are only used to represent the data model of the system. They are needed to interact with the relational database using the SQLAlchemy ORM.\nFurthermore, certain areas of the system such as the implementation of the FastAPI endpoints are not programmed in a class-based structure, but rather in a function-based structure as recommended by the FastAPI documentation. The following sections will provide a brief overview of the relevant classes and their responsibilities.\n\nClass Diagram\nThe following diagram provides an overview of the classes and their relationships. The diagram does not contain the FastAPI endpoints, and authentication logic as they are not implemented as classes. \n\n\nConfig\nThe Config class is responsible for loading environment variables, initializing the OpenAI API, the Chroma Vector Store, and the MySQL Database. It does this in its init method. The environment variables are loaded from a .env file or from the Docker environment, depending on the environment in which the application is running.\nThe Config class is used to manage the configuration of the application. It provides a centralized place to manage all configuration settings. This makes it easier to change settings and manage dependencies as they are all in one place.\nThe Config class is written as a Singleton class. The Singleton pattern is a design pattern that restricts the instantiation of a class to a single instance. This is important as having multiple instances of the Config class could lead to inconsistencies in the configuration settings across different parts of the application. Furthermore, the Config class is responsible for initializing several dependencies such as the database connections. These resources should be shared across the application and not duplicated.\n\n\nDatabase\n\n\nChromaConnector\n\n\nBusinessAnalyst",
    "crumbs": [
      "System Design",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Backend Architecture</span>"
    ]
  },
  {
    "objectID": "backendArchitecture.html#authentication",
    "href": "backendArchitecture.html#authentication",
    "title": "Backend Architecture",
    "section": "Authentication",
    "text": "Authentication",
    "crumbs": [
      "System Design",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Backend Architecture</span>"
    ]
  },
  {
    "objectID": "backendArchitecture.html#rest-api",
    "href": "backendArchitecture.html#rest-api",
    "title": "Backend Architecture",
    "section": "REST API",
    "text": "REST API\n\n\n\nData Model of StratMystiqPro",
    "crumbs": [
      "System Design",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Backend Architecture</span>"
    ]
  },
  {
    "objectID": "deployment.html",
    "href": "deployment.html",
    "title": "StratMystiqPro Documentation",
    "section": "",
    "text": "Setup for Local Development To set up the backend for local development:\nEnsure you have Python 3.11 or later installed. Install the required dependencies with pip install -r requirements.txt. Ensure the MySQL and Chroma databases are running. These can be started using Docker Compose with the command docker-compose up mysql chromadb. Run the application with python main.py. The main.py script takes care of setting up the application. It creates the database tables if they don’t exist.\nDeployment for Testing and Production For testing and production environments, we use Docker. Check out the Dockerfile and docker-compose.yaml files in the root directory of the project for more details.\nSetUp for the frontemd for local development:\nTo deploy the application:\nEnsure you have Docker installed. Run the Docker container with docker-compose up.",
    "crumbs": [
      "Usage",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>deployment.html</span>"
    ]
  }
]